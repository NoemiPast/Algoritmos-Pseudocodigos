#These lines import Python modules
from datetime import datetime
import json
import csv

def generar_numero_factura():
    #datetime functions to make a random number, which will be the facture number
    return datetime.now().strftime("%Y%m%d%H%M%S")

#This function calculates the subtotal
def calcular_subtotal(productos):
    #return functions to calculate the total amount to pay
    #sum functions to calculate the total amount to pay
    #item is a dictionary with the product name, quantity and unit price
    return sum(item['cantidad'] * item['precio_unitario'] for item in productos)

#This function calculates the discount
def aplicar_descuento(subtotal, descuento):
    return subtotal * (descuento / 100)

#This function calculates the taxes
def calcular_impuestos(subtotal):
    return subtotal * 0.16

#This function calculates the total amount to pay
def calcular_total(subtotal, descuento, impuestos):
    return subtotal - descuento + impuestos

#This function prints the bill
def imprimir_factura(factura):
    #print functions to print the bill
    #\n functions to make a new line
    print("\n--- Factura ---")
    #f means f-string, which allows to insert variables in a string.
    #Indicates that this is a formatted string literal, 
    #It is a way of formatting text strings in Python
    print(f"Número de Factura: {factura['numero_factura']}")
    print(f"Fecha: {factura['fecha']}")
    print(f"Cliente: {factura['nombre_cliente']}")
    print("\nProductos:")
    for producto in factura['productos']:
        print(f"{producto['nombre']} - {producto['cantidad']} x ${producto['precio_unitario']:.2f} = ${producto['cantidad'] * producto['precio_unitario']:.2f}")
    print(f"\nSubtotal: ${factura['subtotal']:.2f}")
    print(f"Descuento ({factura['descuento_porcentaje']}%): ${factura['descuento']:.2f}")
    print(f"Impuestos (16%): ${factura['impuestos']:.2f}")
    print(f"Total a Pagar: ${factura['total']:.2f}")
    print(f"Método de Pago: {factura['metodo_pago']}")
    print("----------------\n")

#These functions save the bill in different formats
def guardar_factura_txt(factura):
    nombre_archivo = f"factura_{factura['numero_factura']}.txt"
    with open(nombre_archivo, 'w') as archivo:
        archivo.write("--- Factura ---\n")
        archivo.write(f"Número de Factura: {factura['numero_factura']}\n")
        archivo.write(f"Fecha: {factura['fecha']}\n")
        archivo.write(f"Cliente: {factura['nombre_cliente']}\n")
        archivo.write("\nProductos:\n")
        for producto in factura['productos']:
            archivo.write(f"{producto['nombre']} - {producto['cantidad']} x ${producto['precio_unitario']:.2f} = ${producto['cantidad'] * producto['precio_unitario']:.2f}\n")
        archivo.write(f"\nSubtotal: ${factura['subtotal']:.2f}\n")
        archivo.write(f"Descuento ({factura['descuento_porcentaje']}%): ${factura['descuento']:.2f}\n")
        archivo.write(f"Impuestos (16%): ${factura['impuestos']:.2f}\n")
        archivo.write(f"Total a Pagar: ${factura['total']:.2f}\n")
        archivo.write(f"Método de Pago: {factura['metodo_pago']}\n")
        archivo.write("----------------\n")
    print(f"Factura guardada en {nombre_archivo}")

#This function saves the bill in a JSON file
def guardar_factura_json(factura):
    nombre_archivo = f"factura_{factura['numero_factura']}.json"
    with open(nombre_archivo, 'w') as archivo:
        json.dump(factura, archivo, indent=4)
    print(f"Factura guardada en {nombre_archivo}")

#This function saves the bill in a CSV file
def guardar_factura_csv(factura):
    nombre_archivo = f"factura_{factura['numero_factura']}.csv"
    with open(nombre_archivo, 'w', newline='') as archivo:
        writer = csv.writer(archivo)
        writer.writerow(["Número de Factura", factura['numero_factura']])
        writer.writerow(["Fecha", factura['fecha']])
        writer.writerow(["Cliente", factura['nombre_cliente']])
        writer.writerow([])
        writer.writerow(["Productos", "Cantidad", "Precio Unitario", "Total"])
        for producto in factura['productos']:
            writer.writerow([producto['nombre'], producto['cantidad'], producto['precio_unitario'], producto['cantidad'] * producto['precio_unitario']])
        writer.writerow([])
        writer.writerow(["Subtotal", factura['subtotal']])
        writer.writerow([f"Descuento ({factura['descuento_porcentaje']}%)", factura['descuento']])
        writer.writerow(["Impuestos (16%)", factura['impuestos']])
        writer.writerow(["Total a Pagar", factura['total']])
        writer.writerow(["Método de Pago", factura['metodo_pago']])
    print(f"Factura guardada en {nombre_archivo}")

#This function is the main function
def main():
    factura = {
        'numero_factura': generar_numero_factura(),
        'fecha': datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        'nombre_cliente': input("Nombre del cliente: "),
        'productos': [],
        'descuento_porcentaje': 0,
        'descuento': 0,
        'impuestos': 0,
        'total': 0,
        'metodo_pago': ''
    }
    #This loop asks for the products and their prices
    while True:
        nombre_producto = input("Nombre del producto (o 'fin' para terminar): ")
        if nombre_producto.lower() == 'fin':
            break
        cantidad = int(input("Cantidad: "))
        precio_unitario = float(input("Precio unitario: "))
        factura['productos'].append({
            'nombre': nombre_producto,
            'cantidad': cantidad,
            'precio_unitario': precio_unitario
        })
    #These lines calculate the subtotal, discount, taxes and total amount to pay
    factura['subtotal'] = calcular_subtotal(factura['productos'])

    #This loop asks if the user wants a discount
    descuento = input("¿Aplicar descuento? (s/n): ")
    if descuento.lower() == 's':
        factura['descuento_porcentaje'] = float(input("Porcentaje de descuento: "))
        factura['descuento'] = aplicar_descuento(factura['subtotal'], factura['descuento_porcentaje'])

    #This line calculates the taxes
    factura['impuestos'] = calcular_impuestos(factura['subtotal'] - factura['descuento'])
    factura['total'] = calcular_total(factura['subtotal'], factura['descuento'], factura['impuestos'])

    #This loop prints the payment methods
    print("\nMétodos de pago:")
    print("1. Efectivo")
    print("2. Tarjeta")
    print("3. PayPal")
    metodo_pago = int(input("Seleccione el método de pago (1-3): "))
    if metodo_pago == 1:
        factura['metodo_pago'] = "Efectivo"
    elif metodo_pago == 2:
        factura['metodo_pago'] = "Tarjeta"
    elif metodo_pago == 3:
        factura['metodo_pago'] = "PayPal"
    else:
        factura['metodo_pago'] = "Desconocido"

    imprimir_factura(factura)

    #This loop asks if the user wants to save the bill
    guardar = input("¿Desea guardar la factura? (s/n): ")
    if guardar.lower() == 's':
        formato = input("¿En qué formato desea guardar la factura? (txt/json/csv): ")
        if formato.lower() == 'txt':
            guardar_factura_txt(factura)
        elif formato.lower() == 'json':
            guardar_factura_json(factura)
        elif formato.lower() == 'csv':
            guardar_factura_csv(factura)
        else:
            print("Formato no válido. La factura no se guardará.")

#This line calls the main function
if __name__ == "__main__":
    main()
